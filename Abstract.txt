Abstract Functions

An abstract function is "just" a signature, without an implementation. It is declared in an interface or a base class. It must be implemented in one of the derived classes.

An abstract is a class which contains atleast one abstract function in it. Object of abstract classes cannot be created. An abstract must be derived by some other class(es) and all of its abstract must be implemented.


class MyClass
{
	public function Hello(){
		echo "Hello";
	}

	public abstract function Fun();
}

$obj=new MyClass();







abstract class Shape
{
	private $fillcolor;
	private $linecolor;

	public function SetFillColor($color){
		$this->fillcolor=$color;
	}

	public function GetFillColor(){
		return $this->fillcolor;
	}

	public function SetLineColor($color){
		$this->linecolor=$color;
	}

	public function GetLineColor(){
		return $this->linecolor;
	}

	public abstract function Draw();
}


class Rectangle extends Shape
{
	private $length;
	private $breadth;

	public function Set($length,$breadth){
		$this->length=$length;
		$this->breadth=$breadth;
	}

	public function GetLength(){
		return $this->length;
	}

	public function GetBreadth(){
		return $this->breadth;
	}

	public function Draw(){
		echo "Rectangle Drawn <br>";
		echo "Dimension : " . $this->length . "X" $this->breadth . "<br>";
		echo "Fill Color : " . $this->fillcolor . "<br>";
		echo "Line Color : " . $this->linecolor . "<br>";
	}
}

$rect=new Rectangle();
$rect->Set(5,10);
$rect->SetFillColor('Orange');
$rect->SetLineColor('Black');
$rect->Draw();